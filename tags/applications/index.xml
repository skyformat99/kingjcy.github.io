<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kingjcy Blog</title>
    <link>http://kingjcy.github.io/tags/applications/index.xml</link>
    <description>Recent content on kingjcy Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright (c) 2016. All rights reserved.</copyright>
    <atom:link href="http://kingjcy.github.io/tags/applications/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Installation_of_some_applications</title>
      <link>http://kingjcy.github.io/blog/2016/07/21/installation_of_some_applications/</link>
      <pubDate>Thu, 21 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>http://kingjcy.github.io/blog/2016/07/21/installation_of_some_applications/</guid>
      <description>&lt;p&gt;一直以来安装了好多应用，这边也做了一个整合和思考：&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;我的安装规则&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;1.一般用yum,rpm安装的都是在root权限下&lt;/p&gt;

&lt;p&gt;2.源码安装，可以全局使用命令的，放在root下，还有需要root权限的放在root下&lt;/p&gt;

&lt;p&gt;3.其他的只要给用户自己安排就好，root用于管理和维护，最好不要开发。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;go&#34;&gt;go&lt;/h2&gt;

&lt;h3 id=&#34;go安装&#34;&gt;go安装:&lt;/h3&gt;

&lt;p&gt;1 下载安装包 go1.5.linux-amd64.tar.gz&lt;/p&gt;

&lt;p&gt;2 在linux下找一个目录进行解压 tar zxf go1.5.linux-amd64.tar.gz&lt;/p&gt;

&lt;p&gt;3 编辑文件/etc/profile，在结尾添加环境变量&lt;/p&gt;

&lt;p&gt;export GOROOT=/home/test/Go/go&amp;mdash;-源码安装路径&lt;/p&gt;

&lt;p&gt;export PATH=$GOROOT/bin:$PATH&amp;mdash;&amp;mdash;声明应用&lt;/p&gt;

&lt;p&gt;export GOPATH=/home/test/Go/go-project&amp;mdash;你的项目路劲&lt;/p&gt;

&lt;p&gt;4 执行source /etc/profile，使修改生效&lt;/p&gt;

&lt;p&gt;5 执行go version，查看是否安装成功。&lt;/p&gt;

&lt;h3 id=&#34;godep-go包管理工具-安装&#34;&gt;godep(go包管理工具)安装：&lt;/h3&gt;

&lt;p&gt;1.确保已经有go语言的环境并且设置好了 GOPATH 环境变量。&lt;/p&gt;

&lt;p&gt;2.使用 go get -u github.com/tools/godep 下载 godep 包并自动安装。&lt;/p&gt;

&lt;p&gt;3.godep 可执行程序会放在 $GOPATH/bin 目录下。所以想直接用 godep 执行命令的话需要将该路径加入到全局的环境变量 PATH 中，可以将export PATH=&amp;ldquo;$PATH:$GOPATH/bin&amp;rdquo;加入到系统启动脚本中。&lt;/p&gt;

&lt;h2 id=&#34;java&#34;&gt;java:&lt;/h2&gt;

&lt;p&gt;人们常说的Java X=Java SE X=JDK1.X，都是一回事。&lt;/p&gt;

&lt;h3 id=&#34;jdk的安装&#34;&gt;jdk的安装：&lt;/h3&gt;

&lt;p&gt;1.上网下载安装包 jdk-7u72-linux-x64.tar.gz 解压&lt;/p&gt;

&lt;p&gt;2.设置环境变量***
    vim /etc/profile:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export JAVA_HOME=/usr/java/jdk1.7.0_55
export PATH=.:$JAVA_HOME/bin:$PATH
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;3.检查版本&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;java -version
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;maven的安装&#34;&gt;maven的安装：&lt;/h3&gt;

&lt;p&gt;1.首先到Maven官网下载安装包：apache-maven-3.0.3-bin.tar.gz&lt;/p&gt;

&lt;p&gt;2.进入下载文件夹，找到下载的文件，运行如下命令解压&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tar -zxvf  apache-maven-2.2.1-bin.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;解压后的文件夹名为apache-maven-3.0.3&lt;/p&gt;

&lt;p&gt;3.使用mv命令将apache-maven-3.0.3文件夹拷贝到自己指定的文件夹，比如/usr/local/下&lt;/p&gt;

&lt;p&gt;mv -rf apache-maven-3.0.3 /usr/local/&lt;/p&gt;

&lt;p&gt;4.配置环境变量，编辑/etc/profile文件，添加如下代码&lt;/p&gt;

&lt;p&gt;MAVEN_HOME=/usr/local/apache-maven-3.0.3
   export MAVEN_HOME
   export PATH=${PATH}:${MAVEN_HOME}/bin&lt;/p&gt;

&lt;p&gt;5.保存文件，并运行如下命令使环境变量生效&lt;/p&gt;

&lt;p&gt;source /etc/profile&lt;/p&gt;

&lt;p&gt;6.在控制台输入如下命令，如果能看到Maven相关版本信息，则说明Maven已经安装成功&lt;/p&gt;

&lt;p&gt;mvn -v&lt;/p&gt;

&lt;h3 id=&#34;zookeeper的安装&#34;&gt;zookeeper的安装：&lt;/h3&gt;

&lt;p&gt;1.从官网下载 zookeeper，解压。&lt;/p&gt;

&lt;p&gt;使用默认配置启动 zookeeper sh ./bin/zkServer.sh start，监听地址为 2181。&lt;/p&gt;

&lt;h2 id=&#34;redis&#34;&gt;redis&lt;/h2&gt;

&lt;h3 id=&#34;redis的安装&#34;&gt;redis的安装：&lt;/h3&gt;

&lt;p&gt;1、下载解压包 tar -zxf redis-3.0.7.tar.gz 到安装目录解压&lt;/p&gt;

&lt;p&gt;2、make&lt;/p&gt;

&lt;p&gt;3、make install&lt;/p&gt;

&lt;p&gt;4、用 redis-server 配置文件 启动&lt;/p&gt;

&lt;h3 id=&#34;gem-ruby第三方插件管理器-的安装&#34;&gt;gem（ruby第三方插件管理器）的安装：&lt;/h3&gt;

&lt;p&gt;1、首先具备ruby的解释器，ruby是类似于shell，python的脚本语言&lt;/p&gt;

&lt;p&gt;2、下载安装包 rubygems-1.8.7.tgz 解压&lt;/p&gt;

&lt;p&gt;3、进入目录，执行ruby setup.rb安装&lt;/p&gt;

&lt;p&gt;4、用gem安装ruby的插件&lt;/p&gt;

&lt;p&gt;比如安装redis的ruby插件&lt;/p&gt;

&lt;p&gt;先下载插件文件 redis-3.2.2.gem&lt;/p&gt;

&lt;p&gt;然后执行gem install -l redis-3.2.2.gem本地安装即可。&lt;/p&gt;

&lt;p&gt;在线可以用yum安装&lt;/p&gt;

&lt;p&gt;安装基本的包:&lt;/p&gt;

&lt;p&gt;prompt$ yum install -y ruby&lt;/p&gt;

&lt;p&gt;安装额外的Ruby包和文档:&lt;/p&gt;

&lt;p&gt;prompt$ yum install -y ruby-devel ruby-docs ruby-ri ruby-rdoc&lt;/p&gt;

&lt;p&gt;安装RubyGems:&lt;/p&gt;

&lt;p&gt;prompt$ yum install -y rubygems&lt;/p&gt;

&lt;p&gt;然后一样使用&lt;/p&gt;

&lt;h2 id=&#34;lamp&#34;&gt;LAMP&lt;/h2&gt;

&lt;h3 id=&#34;apache的安装&#34;&gt;Apache的安装：&lt;/h3&gt;

&lt;p&gt;下载安装包&lt;/p&gt;

&lt;p&gt;下载安装 apache 依赖关联包（共四个：apr，apr-iconv，apr-util，pcre）&lt;/p&gt;

&lt;p&gt;正常的解压(tar -zxvf package)，配置（./configure），编译（make），安装（make install）&lt;/p&gt;

&lt;p&gt;可以直接下载bz2包进行rpm打包，直接用rpm包安装&lt;/p&gt;

&lt;h3 id=&#34;mysql的安装&#34;&gt;mysql的安装：&lt;/h3&gt;

&lt;p&gt;1、源码安装，不用传统的configure，用cmake&lt;/p&gt;

&lt;p&gt;2、二进制文件&amp;ndash;我没有找，直接可执行的&lt;/p&gt;

&lt;p&gt;3、rpm安装，下载rpm包，用rpm -ivh  &amp;ndash;nodeps &amp;ndash;force  安装时不再分析包之间的依赖关系而直接安装,对于本机器来说，由于libgc版本过低需要更新，&lt;/p&gt;

&lt;p&gt;4、所以还是直接有源安装比较好，用yum/rpm。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;在centos7的环境下
# wget http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm
# rpm -ivh mysql-community-release-el7-5.noarch.rpm
# yum install mysql-community-server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;5,最新版本全面安装，先去mysql官网，点击downloads，然后找到最后一个开源的版本，遵守GPL协议的MySQL Community Edition (GPL)，点击进去在左侧导航栏中找到MySQL Community Server点击进去，现在redhat的版本，下在一个500多M的rpm的tar包，当然这个可以网页下载，也可以用wget等linux工具下载&lt;/p&gt;

&lt;p&gt;下载后解压安装这个tar包&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;tar -xvf mysql-5.7.13-1.el7.x86_64.rpm-bundle.tar
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;原来系统中就携带了mysql的社区版本，需要先卸载，不然影响后面的安装&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rpm -qa|grep mariadb
rpm -e mariadb-devel-5.5.44-2.el7.centos.x86_64
rpm -e mariadb-libs-5.5.44-2.el7.centos.x86_64 --nodeps
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后按顺序安装对应的rpm包，要按先后顺序，前后有依赖关系&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rpm -ivh mysql-community-common-5.7.13-1.el7.x86_64.rpm
rpm -ivh mysql-community-libs-5.7.13-1.el7.x86_64.rpm
rpm -ivh mysql-community-client-5.7.13-1.el7.x86_64.rpm
rpm -ivh mysql-community-server-5.7.13-1.el7.x86_64.rpm
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样就安装好了，然后需要初始化数据库&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysql_install_db --datadir=/var/lib/mysql   //必须指定datadir,执行后会生成~/.mysql_secret密码文件
mysqld --initialize                         //新版的推荐此方法，执行生会在/var/log/mysqld.log生成随机密码
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这两条语句执行一个就可以完成初始化，针对的版本不一样&lt;/p&gt;

&lt;p&gt;更改mysql数据库目录的所属用户及其所属组，然后启动mysql数据库&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;chown mysql:mysql /var/lib/mysql -R
systemctl start mysqld.service            //启动mysql数据库服务
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后就可以登录了。&lt;/p&gt;

&lt;p&gt;MariaDB数据库管理系统是MySQL的一个分支，主要由开源社区在维护，采用GPL授权许可。开发这个分支的原因之一是：甲骨文公司收购了MySQL后，有将MySQL闭源的潜在风险，因此社区采用分支的方式来避开这个风险。MariaDB的目的是完全兼容MySQL，包括API和命令行，使之能轻松成为MySQL的代替品。&lt;/p&gt;

&lt;h3 id=&#34;php的安装&#34;&gt;php的安装&lt;/h3&gt;

&lt;p&gt;1、安装PHP&lt;/p&gt;

&lt;p&gt;（1）获得PHP源码：php-5.4.1.tar.gz。&lt;/p&gt;

&lt;p&gt;（2）解压缩源码文件：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; #tar -zvxf php-5.4.1.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;（3）安装libxm12以及libxml2-devel，不然编译源码时会出现“Configure: error: xml2-config not found. Please check your libxml2 installation.”问题。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; #yum install -y libxml2 libxm12-devel
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(4)编译源码：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#cd /usr/local/php-5.4.1
#./configure --prefix=/usr/local/php --with-apxs2=/usr/local/apache2/bin/apxs --with-mysql=/usr/local/mysql

#make
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(5)安装&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#make install 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2、配置PHP&lt;/p&gt;

&lt;p&gt;(1)将PHP源码包（/usr/local/php-5.4.1）中的php.ini-development文件复制到/usr/local/lib/下，更名为php.ini。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#cp /usr/local/php-5.4.1/php.ini-development /usr/local/lib/php.ini
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(2)修改Apache配置文件（gedit /usr/local/apache2/conf/httpd.conf）以支持对PHP的解析。如果httpd.conf中没有下列语句，就将它们分别添加到LoadModule和AddType项的后面。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;LoadModule php5_module modules/libphp5.so

AddType application/x-httpd-php .php

在DirectoryIndex index.html index.html.var一行后加入index.php，即改为：

DirectoryIndex index.html index.html.var index.php
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;重启Apache服务器：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#/usr/local/apache2/bin/apachectl restart
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(3)测试PHP：&lt;/p&gt;

&lt;p&gt;在Apache服务器的文件根目录（/usr/local/apache2/htdocs/）下新建一个PHP文件test.php，并输入以下内容：&lt;/p&gt;

&lt;p&gt;&amp;lt;?php
    phpinfo();
?&amp;gt;&lt;/p&gt;

&lt;p&gt;在浏览器中输入&lt;a href=&#34;http://localhost/test.php，如果看到下图，则表示已成功安装了PHP。&#34;&gt;http://localhost/test.php，如果看到下图，则表示已成功安装了PHP。&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;python的安装&#34;&gt;python的安装：&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;                                                                                                                                                                                           1、在官方网站下载python安装包，这里注意python.org/download路径被屏蔽，需要使用http://www.python.org/页面上的中文“下载”链接进行下载。

                                                                                                                                                                                           这里下载了python最新的3.2.2版本：Python-3.2.2.tgz

                                                                                                                                                                                           下载后，文件目录在/home/python/下，这也是我python的安装目录
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2、解压：&lt;/p&gt;

&lt;p&gt;[root@www python]# tar zxvf    Python-3.2.2.tgz&lt;/p&gt;

&lt;p&gt;3、打开安装目录，执行&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[root@www python]# cd Python-3.2.2

[root@www Python-3.2.2]#./configure

[root@www Python-3.2.2]# make

[root@www Python-3.2.2]# makeinstall
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;值此，安装完成。&lt;/p&gt;

&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;

&lt;p&gt;以上都是我对这些应用的一个安装过程，其实再联网的情况下，用yum/rpm是最好的，但是要搞懂安装的过程可以用源码安装，编译安装，其实就是变成可以执行文件，然后放到我们的可执行文件环境变量所指的路劲下
，也可以直接下载可执行文件的包，解压安装。linux下大体就是这些方式，还有一些特殊的方式，具体看安装步骤.后面会有持续更新&lt;/p&gt;

&lt;h3 id=&#34;tomcat&#34;&gt;tomcat&lt;/h3&gt;

&lt;p&gt;tomcat是java领域最广泛应用的web服务器后面会有持续更新&lt;/p&gt;

&lt;h3 id=&#34;tomcat-1&#34;&gt;tomcat&lt;/h3&gt;

&lt;p&gt;tomcat是一个免费的开放源代码的Web 应用服务器，属于轻量级应用服务器，在中小型系统和并发访问用户不是很多的场合下被普遍使用，是开发和调试JSP 程序的首选。在java领域web服务器中广泛运用。Tomcat和IIS等Web服务器一样，具有处理HTML页面的功能，另外它还是一个Servlet和JSP容器，独立的Servlet容器是Tomcat的默认模式。Tomcat处理静态HTML的能力不如Apache服务器。&lt;/p&gt;

&lt;p&gt;安装&lt;/p&gt;

&lt;p&gt;官网有二进制包可以下载，下载后进入bin目录执行startup.sh这个脚本，就直接安装启动了tomcat&lt;/p&gt;

&lt;p&gt;Tomcat Manager&lt;/p&gt;

&lt;p&gt;Tomcat Manager是Tomcat自带的、用于对Tomcat自身以及部署在Tomcat上的应用进行管理的web应用。默认是关闭的，这样开启&lt;/p&gt;

&lt;p&gt;编辑Tomcat安装目录/conf/tomcat-users.xml这个文件，加上用户&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;tomcat-users&amp;gt;
&amp;lt;role rolename=&amp;quot;manager-gui&amp;quot;/&amp;gt;
&amp;lt;role rolename=&amp;quot;manager-script&amp;quot;/&amp;gt;
&amp;lt;user username=&amp;quot;tomcat&amp;quot; password=&amp;quot;tomcat&amp;quot; roles=&amp;quot;manager-gui&amp;quot;/&amp;gt;
&amp;lt;user username=&amp;quot;admin&amp;quot; password=&amp;quot;123456&amp;quot; roles=&amp;quot;manager-script&amp;quot;/&amp;gt;
&amp;lt;/tomcat-users&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以下是Tomcat Manager 4种角色的大致介绍(下面URL中的*为通配符)：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;manager-gui
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;允许访问html接口(即URL路径为/manager/html/*)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;manager-script
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;允许访问纯文本接口(即URL路径为/manager/text/*)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;manager-jmx
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;允许访问JMX代理接口(即URL路径为/manager/jmxproxy/*)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;manager-status
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;允许访问Tomcat只读状态页面(即URL路径为/manager/status/*)&lt;/p&gt;

&lt;h3 id=&#34;python第三方库-模块-包安装&#34;&gt;python第三方库，模块，包安装&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;下载源码，一般在源码中都有setup.py脚本，然后直接运行&lt;/p&gt;

&lt;p&gt;./setup.py install&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;利用第三方安装工具（如pip，easy_install，distribute等）去自动化安装&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
  </channel>
</rss>