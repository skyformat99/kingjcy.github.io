<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kingjcy Blog</title>
    <link>http://kingjcy.github.io/tags/mount/index.xml</link>
    <description>Recent content on kingjcy Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright (c) 2016. All rights reserved.</copyright>
    <atom:link href="http://kingjcy.github.io/tags/mount/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>linux分区与挂载</title>
      <link>http://kingjcy.github.io/blog/2015/12/20/linux%E5%88%86%E5%8C%BA%E4%B8%8E%E6%8C%82%E8%BD%BD/</link>
      <pubDate>Sun, 20 Dec 2015 15:47:26 +0800</pubDate>
      
      <guid>http://kingjcy.github.io/blog/2015/12/20/linux%E5%88%86%E5%8C%BA%E4%B8%8E%E6%8C%82%E8%BD%BD/</guid>
      <description>&lt;p&gt;Linux中一切皆文件，理解linux系统下的分区和挂载能够很大程度的来帮助我们理解linux文件系统。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;分区&#34;&gt;分区&lt;/h2&gt;

&lt;p&gt;其实是对磁盘进行划分以便于存储管理。主要是使用fdisk命令来实现：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[root@pdapp17 /]# fdisk -l

磁盘 /dev/sda：214.7 GB, 214748364800 字节，419430400 个扇区
Units = 扇区 of 1 * 512 = 512 bytes
扇区大小(逻辑/物理)：512 字节 / 512 字节
I/O 大小(最小/最佳)：512 字节 / 512 字节
磁盘标签类型：dos
磁盘标识符：0x0006fd47

设备 Boot      Start         End      Blocks   Id  System
/dev/sda1   *        2048     1026047      512000   83  Linux
/dev/sda2         1026048   419430399   209202176   8e  Linux LVM
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;可以看出这台机器上有一块大小为214G的磁盘，这块磁盘有两个分区，sda1和sda2,假如是一块新磁盘，就可以直接使用fdisk /dev/sda来进行sda[1-N]，具体操作很简单这边就不赘述了。&lt;/p&gt;

&lt;p&gt;这边有一个概念，就是不同接口对应的磁盘名也是不一样的，IDE接口的则是hd[a-z][1-N],SCSI和SATA接口的则是sd[a-z][1-N],还有其他。&lt;/p&gt;

&lt;h2 id=&#34;lvm&#34;&gt;LVM&lt;/h2&gt;

&lt;p&gt;上面分区分好后我们可以使用LVM来进行管理，由此可见，LVM是对磁盘分区后的一种管理机制。&lt;/p&gt;

&lt;p&gt;LVM中有四大命令&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;首先是将分区转化为物理卷，然后就可以在物理卷上进行逻辑卷的操作了&lt;/p&gt;

&lt;p&gt;pvcreate /dev/sda2&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;创建卷组,并将这个物理卷加入到卷组中&lt;/p&gt;

&lt;p&gt;vgcreate vgdata /dev/sda2&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;从物理卷中分割内存创建逻辑卷&lt;/p&gt;

&lt;p&gt;lvcreate -L size -n name vgdata&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;有些卷组已经创建好的，我们就可以直接来创建逻辑卷了，可以用vgdisplay来查看有哪些卷组。同样查看有哪些逻辑卷用lvdisplay.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;删除逻辑卷&lt;/p&gt;

&lt;p&gt;lvremove name&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;格式化逻辑卷&#34;&gt;格式化逻辑卷&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;mkfs [-V] [-t fstype] [fs-options] filesys [blocks] [-L Lable]
-t  就是指定格式化文件的格式
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;可以直接使用&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkfs.xfs(文件格式)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上面的命令也还是调用的mkfs.xfs这个命令。&lt;/p&gt;

&lt;h2 id=&#34;挂载&#34;&gt;挂载&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;mount [-t vfstype] [-o options] device dir
-t vfstype 指定文件系统的类型，通常不必指定。mount 会自动选择正确的类型。
-o options 主要用来描述设备或档案的挂接方式。ro：采用只读方式挂接设 rw：采用读写方式挂接设备 iocharset：指定访问文件系统所用字符集
device 要挂接(mount)的设备。也就是逻辑卷。
dir设备在系统上的挂接点(mount point)。也就是挂载目录。
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;查看&#34;&gt;查看&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;[root@pdapp17 /]# df -h
文件系统                 容量  已用  可用 已用% 挂载点
/dev/mapper/centos-root   50G  6.4G   44G   13% /
devtmpfs                 4.9G     0  4.9G    0% /dev
tmpfs                    4.9G   84K  4.9G    1% /dev/shm
tmpfs                    4.9G   17M  4.9G    1% /run
tmpfs                    4.9G     0  4.9G    0% /sys/fs/cgroup
/dev/mapper/centos-home   50G   33M   50G    1% /home
/dev/sda1                497M  141M  356M   29% /boot
tmpfs                   1001M   16K 1001M    1% /run/user/42
tmpfs                   1001M     0 1001M    0% /run/user/0
/dev/mapper/centos-ceph   50G  5.1G   45G   11% /ceph
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;df加-h可以更加清晰的查看系统文件，看看逻辑卷挂载点在哪，也可以直接看挂载&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[root@pdapp17 /]# mount | grep centos
/dev/mapper/centos-root on / type xfs (rw,relatime,seclabel,attr2,inode64,noquota)
/dev/mapper/centos-home on /home type xfs (rw,relatime,seclabel,attr2,inode64,noquota)
/dev/mapper/centos-ceph on /ceph type xfs (rw,relatime,seclabel,attr2,inode64,noquota)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;卸载挂载的文件系统&#34;&gt;卸载挂载的文件系统&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;umount device
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
  </channel>
</rss>