<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kingjcy Blog</title>
    <link>http://kingjcy.github.io/tags/chrome/index.xml</link>
    <description>Recent content on kingjcy Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright (c) 2016. All rights reserved.</copyright>
    <atom:link href="http://kingjcy.github.io/tags/chrome/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>chrome的开发者工具</title>
      <link>http://kingjcy.github.io/blog/2017/06/07/chrome%E7%9A%84%E5%BC%80%E5%8F%91%E8%80%85%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Wed, 07 Jun 2017 15:56:36 +0800</pubDate>
      
      <guid>http://kingjcy.github.io/blog/2017/06/07/chrome%E7%9A%84%E5%BC%80%E5%8F%91%E8%80%85%E5%B7%A5%E5%85%B7/</guid>
      <description>&lt;p&gt;chrome的开发者工具在开发过程中是十分常用的，这边整理一些。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Elements: 允许我们从浏览器的角度看页面，也就是说我们可以看到chrome渲染页面所需要的的HTML、CSS和DOM(Document Object Model)对象。此外，还可以编辑这些内容更改页面显示效果；
Network: 可以看到页面向服务器请求了哪些资源、资源的大小以及加载资源花费的时间，当然也能看到哪些资源不能成功加载。此外，还可以查看HTTP的请求头，返回内容等；
Sources: 主要用来调试js；
Timeline: 提供了加载页面时花费时间的完整分析，所有事件，从下载资源到处理Javascript，计算CSS样式等花费的时间都展示在Timeline中；
Profiles: 分析web应用或者页面的执行时间以及内存使用情况；
Resources: 对本地缓存（IndexedDB、Web SQL、Cookie、应用程序缓存、Web Storage）中的数据进行确认及编辑；
Audits: 分析页面加载的过程，进而提供减少页面加载时间、提升响应速度的方案；
Console: 显示各种警告与错误信息，并且提供了shell用来和文档、开发者工具交互。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;快速编辑HTML元素&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;选择开发工具面板的Elements
在Elements下的元素编辑器中选择一个DOM元素
右击选择edit as html，然后进行编辑&lt;/p&gt;

&lt;p&gt;右击的辅助功能&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Add Attribute: 在标签中增加新的属性；
Force Element State: 有时候我们为页面元素添加一些动态的样式，比如当鼠标悬停在元素上时的样式，这种动态样式很难调试。我们可以使用Force Element State强制元素状态，便于调试，如下图：
![图4. 强制元素状态][4]
Edit as HTML: 以HTML形式更改页面元素；
Copy XPath: 复制XPath；
Delete Node: 删除DOM节点；
Break On: 设置DOM 断点。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Elements右面展示的是css属性&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Styles: 显示用户定义的样式，比如请求的default.css中的样式，和通过Javasript生成的样式，还有开发者工具添加的样式；
Computed: 显示开发者工具计算好的元素样式；
Event Listeners: 显示当前HTML DOM节点和其祖先节点的所有JavaScript事件监听器，这里的监听脚本可以来自Chrome的插件。可以点击右边小漏斗形状(filter)选择只显示当前节点的事件监听器。
DOM Breakpoints: 列出所有的DOM 断点；
Properties: 超级全面地列出当前选中内容的属性，不过基本很少用到。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;network&lt;/p&gt;

&lt;p&gt;请求的每个资源在Network表格中显示为一行，每个资源都有许多列的内容(如红色区块1)，不过默认情况下不是所有列都显示出来，可以右击来选择，每一个文件点击都有具体的传输过程。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Headers 该资源的HTTP头信息。
Preview 根据你所选择的资源类型（JSON、图片、文本）显示相应的预览。
Response 显示HTTP的Response信息。
Cookies 显示资源HTTP的Request和Response过程中的Cookies信息。
Timing 显示资源在整个请求生命周期过程中各部分花费的时间。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;快速获取curl，network获取的资源上右击copy-&amp;gt;copy as cURL&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>