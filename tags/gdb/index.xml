<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kingjcy Blog</title>
    <link>http://kingjcy.github.io/tags/gdb/index.xml</link>
    <description>Recent content on kingjcy Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright (c) 2016. All rights reserved.</copyright>
    <atom:link href="http://kingjcy.github.io/tags/gdb/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>工具系列(二):gdb的使用总结</title>
      <link>http://kingjcy.github.io/blog/2015/03/14/%E5%B7%A5%E5%85%B7%E7%B3%BB%E5%88%97%E4%BA%8Cgdb%E7%9A%84%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/</link>
      <pubDate>Sat, 14 Mar 2015 15:48:41 +0800</pubDate>
      
      <guid>http://kingjcy.github.io/blog/2015/03/14/%E5%B7%A5%E5%85%B7%E7%B3%BB%E5%88%97%E4%BA%8Cgdb%E7%9A%84%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/</guid>
      <description>&lt;p&gt;gdb在debug过程中起着巨大的作用，用好gdb调试工具可以很快的定位问题，解决问题，这边记录一点gdb的使用注意点，便于查看和备忘。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;gdb调试能使用前提-编译时要加-g&#34;&gt;gdb调试能使用前提：编译时要加-g&lt;/h2&gt;

&lt;p&gt;list(l):显示文件内容，可以加行号，函数名，也可以是其他文件的函数file：fun/行号&lt;/p&gt;

&lt;p&gt;break(b):设置断点，运行到这边停止，可以是行号，或者函数名，也可以是其他文件的函数file：fun/行号，也可以跟随条件表达式，b if i = 5&lt;/p&gt;

&lt;p&gt;delete（d）：删除断点；加断点号&lt;/p&gt;

&lt;p&gt;info（i）：显示，比如显示断点 i b&lt;/p&gt;

&lt;p&gt;run（r）：运行程序，到断点处，&lt;/p&gt;

&lt;p&gt;continue（c）：继续运行到下一个断点&lt;/p&gt;

&lt;p&gt;step（s）：单步调试，进入函数内部&lt;/p&gt;

&lt;p&gt;next（n）：单步调试，不进入函数内部&lt;/p&gt;

&lt;p&gt;print（p）：打印；可以是变量==，也可以是静态数组或者动态数组，p 数组名，p *数组名＠长度　也可以动态改变变量值　ｐi = 100&lt;/p&gt;

&lt;p&gt;ptype ：显示类型&lt;/p&gt;

&lt;p&gt;watch 变量：观察变量的变化&lt;/p&gt;

&lt;p&gt;until：报循环运行结束&lt;/p&gt;

&lt;p&gt;finilsh：把函数运行完&lt;/p&gt;

&lt;p&gt;调试逻辑错误&lt;/p&gt;

&lt;p&gt;调试段错误
越界
往空地址里面写东西&lt;/p&gt;

&lt;h2 id=&#34;调试core&#34;&gt;调试core&lt;/h2&gt;

&lt;p&gt;首先可以查看是否产生core文件：ulimit -c 可以加指定大小的core文件，也可以是unlimited&lt;/p&gt;

&lt;p&gt;gdb 可执行文件名 core文件&lt;/p&gt;

&lt;p&gt;where知道具体位置，打印出相关信息。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>