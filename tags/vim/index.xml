<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kingjcy Blog</title>
    <link>http://kingjcy.github.io/tags/vim/index.xml</link>
    <description>Recent content on kingjcy Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright (c) 2016. All rights reserved.</copyright>
    <atom:link href="http://kingjcy.github.io/tags/vim/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>vim编辑利器</title>
      <link>http://kingjcy.github.io/blog/2015/11/22/vim%E7%BC%96%E8%BE%91%E5%88%A9%E5%99%A8/</link>
      <pubDate>Sun, 22 Nov 2015 14:25:28 +0800</pubDate>
      
      <guid>http://kingjcy.github.io/blog/2015/11/22/vim%E7%BC%96%E8%BE%91%E5%88%A9%E5%99%A8/</guid>
      <description>&lt;p&gt;vim编辑器的简洁清晰明了的风格，强大的编辑能力，以及高效的coding，就是一款为程序员而生的编辑器，作为一个程序员，也应该学会使用vim。但是想用好vim也不是一件简单的事情，当你用好vim后带来的好处也是很多的，当然，&amp;rdquo;工欲善其事，必先利其器&amp;rdquo;，学习vim肯定是不错的。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;h1 id=&#34;vim的安装与配置&#34;&gt;vim的安装与配置&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;我的macos系统是自带的vim编辑器，当然也可以安装最新版的vim&lt;/p&gt;

&lt;p&gt;首先去下载源码&lt;a href=&#34;https://github.com/vim/vim&#34;&gt;https://github.com/vim/vim&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;然后正常安装&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$cd src
$./configure
$make &amp;amp;&amp;amp; make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;就安装好了，可以运行vim检查是否安装成功。&lt;/p&gt;

&lt;p&gt;vim的配置主要是修改vim的配置文件～／.vimrc，这个可以百度到很详细的配置，在这里就不赘述了。&lt;/p&gt;

&lt;blockquote&gt;
&lt;h1 id=&#34;vim插件&#34;&gt;vim插件&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;vim插件管理器&#34;&gt;vim插件管理器&lt;/h3&gt;

&lt;p&gt;vundle是一款特别好用的vim插件的管理器，安装也是非常简单。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;然后修改配置文件~/.vimrc&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;filetype off
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()
Bundle &#39;gmarik/vundle&#39;
Bundle &#39;其他的 github 位置...&#39;
filetype plugin indent on
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;vundle本身也是一个插件，所以也需要安装，目前vundle这个项目托管在github上，地址是&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/gmarik/vundle&#34;&gt;https://github.com/gmarik/vundle&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;所以上面配置文件中加上了这个插件的安装&lt;/p&gt;

&lt;p&gt;最后打开vim，输入:BundleInstall会显示安装的过程，done代表安装完成。&lt;/p&gt;

&lt;h2 id=&#34;source-instght类&#34;&gt;source instght类&lt;/h2&gt;

&lt;h3 id=&#34;ctags&#34;&gt;ctags&lt;/h3&gt;

&lt;p&gt;Ctags工具是用来遍历源代码文件生成tags文件，这些tags文件能被编辑器或其它工具用来快速查找定位源代码中的符号（tag/symbol），如变量名，函数名等。比如，tags文件就是Taglist和OmniCppComplete工作的基础。&lt;/p&gt;

&lt;h4 id=&#34;安装&#34;&gt;安装&lt;/h4&gt;

&lt;p&gt;我的macos系统下直接使用homebrew&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew install ctags
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;也可以直接用源码安装，最好下载&lt;a href=&#34;http://ctags.sourceforge.net/&#34;&gt;EXUBERANT ctags&lt;/a&gt;，这个提供了比较强大的基础功能。正常安装&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd src
./configure
make &amp;amp;&amp;amp; make install
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;常用命令&#34;&gt;常用命令&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;ctags -R * 对当前目录下所有的文件包含子目录下的文件进行递归创建tag文件，当vi运行后会自动加载tag文件中所有的对象包含&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;用#define定义的宏&lt;/li&gt;
&lt;li&gt;枚举型变量的值&lt;/li&gt;
&lt;li&gt;函数的定义、原型和声明&lt;/li&gt;
&lt;li&gt;名字空间（namespace）&lt;/li&gt;
&lt;li&gt;类型定义（typedefs）&lt;/li&gt;
&lt;li&gt;变量（包括定义和声明）&lt;/li&gt;
&lt;li&gt;类（class）、结构（struct）、枚举类型（enum）和联合（union）&lt;/li&gt;
&lt;li&gt;类、结构和联合中成员变量或函数&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;vi -t tag tag为变量，函数或者其他，就是对当前目录下进行tag对象查找，找到就打开文件并定位到这一行。&lt;/li&gt;
&lt;li&gt;:ts 如果函数或者变量有在这个项目中有多处定义的话，用这个命令列出来可供选择&lt;/li&gt;
&lt;li&gt;:tp  上面列表当前选择的上一个&lt;/li&gt;
&lt;li&gt;:tn  列表当前选择的下一个&lt;/li&gt;
&lt;li&gt;Ctrl+] 查找当前变量或者函数的定义处并打开定位&lt;/li&gt;
&lt;li&gt;Ctrl+t 回退Ctrl+]的操作，都可以多处查找&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;taglist&#34;&gt;taglist&lt;/h3&gt;

&lt;p&gt;TagList插件,是一款基于ctags,在vim代码窗口旁以分割窗口形式显示当前的代码结构概览,增加代码浏览的便利程度。&lt;/p&gt;

&lt;h4 id=&#34;安装-1&#34;&gt;安装&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;下载安装包&lt;a href=&#34;http://www.vim.org/scripts/script.php?script_id=273&#34;&gt;http://www.vim.org/scripts/script.php?script_id=273&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;进入~/.vim目录，将Taglist安装包解压，解压后会在~/.vim目录中生成几个新子目录，如plugin和doc（安装其它插件时，可能还会新建autoload等其它目录）。&lt;/li&gt;
&lt;li&gt;进入~/.vim/doc目录，在Vim下运行&amp;rdquo;helptags .&amp;ldquo;命令。此步骤是将doc下的帮助文档加入到Vim的帮助主题中，这样我们就可以通过在Vim中运行“help taglist.txt”查看taglist帮助。&lt;/li&gt;
&lt;li&gt;修改配置文件,可以根据需要修改，不修改也可以&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&#34;基本用法&#34;&gt;基本用法&lt;/h4&gt;

&lt;ol&gt;
&lt;li&gt;打开与关闭  :Tlist 可以在vim配置中设置快捷键map &lt;F8&gt; :TlistToggle&lt;/li&gt;
&lt;li&gt;左右窗口切换 Ctrl+w左右，也可以用Ctrl+h,l&lt;/li&gt;
&lt;li&gt;u更新tag
其他的我觉的用处不大，需要的适合了解一些就好。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;cscope&#34;&gt;cscope&lt;/h3&gt;

&lt;p&gt;Cscope是一个类似ctags的工具。 你可以把它想作是超过频的ctags，因为它功能比ctags强大很多。&lt;/p&gt;

&lt;h4 id=&#34;安装-2&#34;&gt;安装&lt;/h4&gt;

&lt;p&gt;macos上直接使用&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew install cscope
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;就好。至于源码安装和上面的ctags一样，这边就不多说了。&lt;/p&gt;

&lt;h4 id=&#34;基本使用&#34;&gt;基本使用&lt;/h4&gt;

&lt;p&gt;首先在目录下使用“cscope -Rqb”生成cscope.out文件;&lt;/p&gt;

&lt;p&gt;使用时先在VIM的命令行下调用“cscope add/../../cscope.out”（或cs add /../../cscope.out)命令添加一个cscope数据库，然后就可以调“cscope find”（或 cs f ）命令进行查找了。&lt;/p&gt;

&lt;p&gt;VIM支持8种cscope的查询功能，如下：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;c:Find functions calling this function//查找调用本函数的函数&lt;/li&gt;
&lt;li&gt;d:Find functions called by this function //查找本函数调用的函数&lt;/li&gt;
&lt;li&gt;e:Find this egrep pattern//查找egrep模式，相当于egrep功能，但查找速度快多了&lt;/li&gt;
&lt;li&gt;f:Find this file //查找并打开文件，类似vim的find功能&lt;/li&gt;
&lt;li&gt;g:Find this definition//查找函数、宏、枚举等定义的位置，类似ctags的功能&lt;/li&gt;
&lt;li&gt;i:Find files #including this file //查找包含本文件的文件&lt;/li&gt;
&lt;li&gt;s:Find this C symbol //查找C语言符号，即查找函数名、宏、枚举值等出现的地方&lt;/li&gt;
&lt;li&gt;t:Find assignments to //查找指定的字符串&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;markdown类&#34;&gt;MarkDown类&lt;/h2&gt;

&lt;h3 id=&#34;vim-markdown&#34;&gt;vim-markdown&lt;/h3&gt;

&lt;p&gt;vim-markdown是md文档高亮方案的插件，通过vundle安装&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Plugin &#39;godlygeek/tabular&#39;
Plugin &#39;plasticboy/vim-markdown&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后运行BundleInstall安装就可以，运行vim打开md文档就可以看到高亮了。&lt;/p&gt;

&lt;h3 id=&#34;vim-instant-markdown&#34;&gt;vim-instant-markdown&lt;/h3&gt;

&lt;p&gt;这是一个实时预览的插件，当你用vim打开markdown文档的时候，会自动打开一个浏览器窗口，并且可以实时预览。此插件目前只支持OSX 和 Unix/Linuxes操作系统。&lt;/p&gt;

&lt;p&gt;安装之前需要安装nodejs和npm&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew install node
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;就都安装好了，npm是一款nodejs包的管理工具。然后还是通过vundle来安装&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Plugin &#39;suan/vim-instant-markdown&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;安装好后编辑md文件就会实时的打开一个浏览器窗口显示文档内容，其实就是访问本地的&lt;a href=&#34;http://localhost:8090&#34;&gt;http://localhost:8090&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;h1 id=&#34;vim使用&#34;&gt;vim使用&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;恢复文件&#34;&gt;恢复文件&lt;/h3&gt;

&lt;p&gt;当文件还没有保存就意外关闭时，只要用-r就行&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;vi -r filename 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后删除.swp文件。&lt;/p&gt;

&lt;h3 id=&#34;打开多个文件&#34;&gt;打开多个文件&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;直接用vim file1 file2&amp;hellip;filen&lt;/li&gt;
&lt;li&gt;打开vim，然后用open file来打开&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;同时显示多个文件：&lt;/p&gt;

&lt;p&gt;其实就是分屏&lt;/p&gt;

&lt;p&gt;split，横分屏&lt;/p&gt;

&lt;p&gt;vsplit竖分屏&lt;/p&gt;

&lt;p&gt;窗口切换用Ctrl+w左右键，或者Ctrl+h，l&lt;/p&gt;

&lt;p&gt;文件切换&lt;/p&gt;

&lt;p&gt;bn／ctrl+6 下一个文件&lt;/p&gt;

&lt;p&gt;bp   上一个文件&lt;/p&gt;

&lt;h3 id=&#34;光标操作&#34;&gt;光标操作&lt;/h3&gt;

&lt;p&gt;翻页 Ctrl+f 向下 Ctrl+b 向上
翻半页 Ctrl+d Ctrl+u&lt;/p&gt;

&lt;h3 id=&#34;编辑&#34;&gt;编辑&lt;/h3&gt;

&lt;p&gt;撤销 u  恢复  Ctrl+r
打开文件 open name&lt;/p&gt;

&lt;p&gt;set nu 或者 set number //显示行号；&lt;/p&gt;

&lt;p&gt;set nonu 或者 set nonumber //关闭自动显示行号；&lt;/p&gt;

&lt;p&gt;set ic //查找时忽略大小写；&lt;/p&gt;

&lt;p&gt;set noic //查找时不忽略大小写。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>