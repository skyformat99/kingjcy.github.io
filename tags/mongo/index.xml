<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kingjcy Blog</title>
    <link>http://kingjcy.github.io/tags/mongo/index.xml</link>
    <description>Recent content on kingjcy Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright (c) 2016. All rights reserved.</copyright>
    <atom:link href="http://kingjcy.github.io/tags/mongo/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>mongodb tutorial</title>
      <link>http://kingjcy.github.io/blog/2016/12/15/mongodb-tutorial/</link>
      <pubDate>Thu, 15 Dec 2016 14:23:58 +0800</pubDate>
      
      <guid>http://kingjcy.github.io/blog/2016/12/15/mongodb-tutorial/</guid>
      <description>&lt;p&gt;mongodb是一种document类型的数据库，document我觉得事实上不要翻译的好，可以说是以一种包含key-value键值对的数据结构体，类似于json的格式bson。是一种面向集合的存储模式。我觉得集合和document在mangodb中很重要。mongo本身具有高性能，易部署等特性。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;mongodb基本概念&#34;&gt;mongodb基本概念&lt;/h2&gt;

&lt;p&gt;这边最重要的就是集合，一种document类型的数据结构,如下举个例子就可以很形象的说明&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{
    &amp;quot;_id&amp;quot; : ObjectId(&amp;quot;54c955492b7c8eb21818bd09&amp;quot;),
    &amp;quot;address&amp;quot; : {
        &amp;quot;street&amp;quot; : &amp;quot;2 Avenue&amp;quot;,
        &amp;quot;zipcode&amp;quot; : &amp;quot;10075&amp;quot;,
    },
    &amp;quot;borough&amp;quot; : &amp;quot;Manhattan&amp;quot;,
    &amp;quot;grades&amp;quot; : [
        {
            &amp;quot;date&amp;quot; : ISODate(&amp;quot;2014-10-01T00:00:00Z&amp;quot;),
            &amp;quot;grade&amp;quot; : &amp;quot;A&amp;quot;,
            &amp;quot;score&amp;quot; : 11
        }
        {
            &amp;quot;date&amp;quot; : ISODate(&amp;quot;2014-10-01T00:00:00Z&amp;quot;),
            &amp;quot;grade&amp;quot; : &amp;quot;B&amp;quot;,
            &amp;quot;score&amp;quot; : 17
        }
    ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其中_id是唯一的标志。&lt;/p&gt;

&lt;h2 id=&#34;安装与使用&#34;&gt;安装与使用&lt;/h2&gt;

&lt;p&gt;我以centos 7为例，来安装mongodb。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;我们可以用yum来安装，先配置yum源来加载包：&lt;/p&gt;

&lt;p&gt;vi /etc/yum.repos.d/mongodb-org-3.4.repo&lt;/p&gt;

&lt;p&gt;[mongodb-org-3.4]
name=MongoDB Repository
baseurl=&lt;a href=&#34;https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.4/x86_64/&#34;&gt;https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/3.4/x86_64/&lt;/a&gt;
gpgcheck=1
enabled=1
gpgkey=&lt;a href=&#34;https://www.mongodb.org/static/pgp/server-3.4.asc&#34;&gt;https://www.mongodb.org/static/pgp/server-3.4.asc&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;这个是3.0后的版本yum源，3.0之前的可以去官网查找，然后直接用yum命令安装&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo yum install -y mongodb-org
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;可以用压缩包安装，直接去官网下载解压就可以用，这边就不赘述了。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;相关路径&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;数据文件路径： /var/lib/mongo,但是默认是存储在/data/db这个目录下面，这个需要手动创建的，可以用&amp;ndash;dbpath来改变。&lt;/p&gt;

&lt;p&gt;日志路径： /var/log/mongodb&lt;/p&gt;

&lt;p&gt;配置文件：/etc/mongod.conf&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;服务端&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;启动mongod服务：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;systemctl start mongod
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或者&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/usr/bin/mongod -f /etc/mongod.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这边可以修改一下开机启动&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo chkconfig mongod on
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;停止服务&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;systemctl stop mongod
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;重启服务&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;systemctl restart mongod
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;客户端&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;客户端是一个mongo的可执行程序，直接输入mongo就可以进入mongodb的shell界面。&lt;/p&gt;

&lt;p&gt;具体的操作可以通过输入help进行查询。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;mongo基本命令的使用&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;dbname.system.* 是包含多种系统信息的特殊集合(Collection)&lt;/li&gt;
&lt;li&gt;show dbs 展示数据库&lt;/li&gt;
&lt;li&gt;use dnname 进入某数据库,如果数据库不存在则创建它。  这边和mysql的区别是mysql必须以；结束语句。&lt;/li&gt;
&lt;li&gt;db.dropDatabase()  删除数据库&lt;/li&gt;
&lt;li&gt;db 展示当前数据库&lt;/li&gt;
&lt;li&gt;db.COLLECTION_NAME.insert(document)  插入数据&lt;/li&gt;
&lt;li&gt;db.collection.update(query,update,{upsert: boolean,multi: boolean,writeConcern: document})  1.查询条件，2.更新内容一般跟随变量使用，3.不存在是否插入一条，默认false不插入，4.默认false只修改第一条，否则全部修改 5.抛错级别&lt;/li&gt;
&lt;li&gt;db.collection.remove(query,{justOne: boolean,writeConcern: document}) 1.查询条件 2.删除一条或者全部 3.抛错级别&lt;/li&gt;
&lt;li&gt;db.集合名.find() 查找这个集合，如果需要用易读的方式来查询就加pretty(), and直接输入两个参数，or则用操作符$or 可以进行匹配&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;操作符&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
&lt;li&gt;(&amp;gt;) 大于 - $gt&lt;/li&gt;
&lt;li&gt;(&amp;lt;) 小于 - $lt&lt;/li&gt;
&lt;li&gt;(&amp;gt;=) 大于等于 - $gte&lt;/li&gt;
&lt;li&gt;(&amp;lt;=) 小于等于 - $lte&lt;/li&gt;
&lt;li&gt;$type:数字对应不同的数据类型，匹配一个类型的数据。&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>