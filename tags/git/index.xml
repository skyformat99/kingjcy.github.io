<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kingjcy Blog</title>
    <link>http://kingjcy.github.io/tags/git/index.xml</link>
    <description>Recent content on kingjcy Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright (c) 2016. All rights reserved.</copyright>
    <atom:link href="http://kingjcy.github.io/tags/git/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>工具系列(一)：git和github的使用总结</title>
      <link>http://kingjcy.github.io/blog/2014/11/02/%E5%B7%A5%E5%85%B7%E7%B3%BB%E5%88%97%E4%B8%80git%E5%92%8Cgithub%E7%9A%84%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/</link>
      <pubDate>Sun, 02 Nov 2014 16:50:34 +0800</pubDate>
      
      <guid>http://kingjcy.github.io/blog/2014/11/02/%E5%B7%A5%E5%85%B7%E7%B3%BB%E5%88%97%E4%B8%80git%E5%92%8Cgithub%E7%9A%84%E4%BD%BF%E7%94%A8%E6%80%BB%E7%BB%93/</guid>
      <description>&lt;p&gt;一直想整理一下平时使用的工具，都没有时间，但是还是要带着整理的，备忘也便于查看。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;h1 id=&#34;git&#34;&gt;&lt;em&gt;git&lt;/em&gt;&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;git是一个分布式版本控制系统，它没有中央服务器，本地便是一个版本库。不需要联网就能开发，它是通过推送自己修改的内容给对方来实现版本控制的。&lt;/p&gt;

&lt;p&gt;svn则与之相反，svn是一种集中式的版本控制系统，它拥有中央服务器，需要先从中央服务器中下载最新的版本，然后进行修改，最后在将修改的推送到中央服务器上，所以必须能连接上服务器，不然不利于开发。&lt;/p&gt;

&lt;p&gt;相对而言，git适用于随时随地的本地开发。&lt;/p&gt;

&lt;h3 id=&#34;安装&#34;&gt;安装&lt;/h3&gt;

&lt;p&gt;linux下安装（centos）&lt;/p&gt;

&lt;p&gt;1.yum基础软件包管理工具&lt;/p&gt;

&lt;p&gt;&lt;code&gt;yum install git&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;目前的yum源安装最高版本应该是1.7.1&lt;/p&gt;

&lt;p&gt;2.编译安装&lt;/p&gt;

&lt;p&gt;首先到github[&lt;a href=&#34;https://github.com/git/git/releases&#34;&gt;https://github.com/git/git/releases&lt;/a&gt;] 上下载最新的release版本。安装之前需要先安装git的依赖包：：curl、zlib、openssl、expat，还有libiconv。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ sudo yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ tar -zxf git-2.0.0.tar.gz
$ cd git-2.0.0
$ make configure
$ ./configure --prefix=/usr
$ make all doc info
$ sudo make install install-doc install-html install-info
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后就可以检查版本安装是否成功了&lt;code&gt;git --version&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;操作使用&#34;&gt;操作使用&lt;/h3&gt;

&lt;p&gt;git是一个本地管理的软件，首先要掌握本地的使用命令：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;git init  在当前目录建立仓库，也就是初始化本地目录环境，可以看见有一个隐藏文件.git 要输出这个仓库，直接删除这个目录（暴力方法）。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;新建文件 touch t&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;加版本  git add t&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;提交版本  git commit t -m &amp;ldquo;版本说明日志&amp;rdquo;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;     git commit -a -m &amp;quot;&amp;quot;  提交所有文件
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;版本比较 git diff t&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;显示版本日志  git log&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;恢复上一个版本 git reset &amp;ndash;hard 版本号，可以在git log中显示&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;查看状态  git status&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;分支&lt;/p&gt;

&lt;p&gt;创建分支:执行git branch &lt;branchname&gt;命令创建新分支&lt;/p&gt;

&lt;p&gt;切换分支:执行git checkout &lt;branchname&gt;命令切换到新分支&amp;mdash;合一步  git checkout -b XXXX、&lt;/p&gt;

&lt;p&gt;git branch -a   查看远程分支&lt;/p&gt;

&lt;p&gt;git branch 查看本地分支&lt;/p&gt;

&lt;p&gt;删除本地分支   git branch -d xxxxx&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;包括增删减改后的文件都可以用如上的操作，我这边主要对新增文件的操作，最重要是之后的提交。&lt;/p&gt;

&lt;blockquote&gt;
&lt;h1 id=&#34;github&#34;&gt;&lt;em&gt;github&lt;/em&gt;&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;github是一个git版本的远程服务器仓库，很多开源的项目都会将代码保存在这个托管平台上，是一个类似于dockerhub的存储功能的公共仓库。&lt;/p&gt;

&lt;p&gt;这边主要记录一些github和本地的git仓库的交互：&lt;/p&gt;

&lt;p&gt;首先创建ssh key&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssh-keygen -t rsa -C &amp;quot;574209987@qq.com&amp;quot;----生成家目录下的.ssh/XXX 秘钥文件
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后到github的settings中设置ssh key把公共密码贴进去&amp;rdquo;&amp;rdquo;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git config --global 注册用户信息
git config --global user.name &amp;quot;jcy&amp;quot;
git config --global user.email &amp;quot;574209987@qq.com&amp;quot;
git config --global core.editor vim-----commit后用vim编辑
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;远程到本地&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone https://github.com/kingjcy/t2.git---远程克隆到本地
git fetch https://github.com/kingjcy/t2.git---远程覆盖本地
git pull https://github.com/kingjcy/t2.git----远程和本地合并，用于开发前同步版本
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;本地到远程&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git remote -v 来查看当前项目中都添加了哪些远程仓库-----其中Origin一般是自己在服务器上的远程仓库，其他的为他人的远程仓库。
git remote add 别名 https://github.com/kingjcy/Test.git-----添加远程库
git push  别名 master（分支名）----推送到远程
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;h1 id=&#34;问题记录&#34;&gt;问题记录&lt;/h1&gt;
&lt;/blockquote&gt;

&lt;p&gt;问题1：error: The requested URL returned error: 403 Forbidden while accessing &lt;a href=&#34;https://github.com/kingjcy/kingjcy.github.io.git/info/refs&#34;&gt;https://github.com/kingjcy/kingjcy.github.io.git/info/refs&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;修改vim .git/config
url = https://@github.com/kingjcy/kingjcy.github.io.git改为url = https://kingjcy@github.com/kingjcy/kingjcy.github.io.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;问题2：(gnome-ssh-askpass:23502): Gtk-WARNING **: cannot open display:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;执行unset SSH_ASKPASS，不用输用户名，直接输入密码。
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
  </channel>
</rss>