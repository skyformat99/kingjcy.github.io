<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kingjcy Blog</title>
    <link>http://kingjcy.github.io/tags/thought/index.xml</link>
    <description>Recent content on kingjcy Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright (c) 2016. All rights reserved.</copyright>
    <atom:link href="http://kingjcy.github.io/tags/thought/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>life experience</title>
      <link>http://kingjcy.github.io/post/life_experience/</link>
      <pubDate>Tue, 10 May 2016 15:03:35 +0800</pubDate>
      
      <guid>http://kingjcy.github.io/post/life_experience/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;人生课堂&amp;mdash;交通事故&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这次的交通事故教会我不少。。。社会也需要我不断的学习&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;首先描述一下，事情是这样的，5月8号晚上，我开车由北向南直行，对方的车由东向南左转弯，当我车到十字路口的时候，他的车方向还没有打过来，我向右打了一个方向，还是没有躲过，最后被撞了一下。
第一次发生车祸，我不知道该怎么处理，只能通知家人，他说留个电话明天处理，我肯定不让，我没有办法就这么相信别人，所以也就没有答应，最后家里人过来，他却没有任何交代，只留下他的朋友走了，
后来打电话然他回来，他却没有回来，依稀记得，他很叫嚣：要么明天处理，要么你就报警，我不可能信任他，我只有报警。其实我是第一次遇到这种事情，现在才知道交通事故是要报警的，要是知道我当场就报警了，
当然我现在也知道也可以私了，只有谈妥赔钱就好，不然你要是走保险，那必须报警，需要驾驶证，行驶证，和保单。这个切记切记，以后就知道怎么做了。&lt;/p&gt;

&lt;p&gt;还有一点描述，关于他酒驾，我知道酒驾问题很严重的，所以看他态度比较好，就好心帮了他一把，就说不确定他有没有酒驾，确实我也不能拿出证据说明他有没有酒驾，然后交警那边说现场说酒驾，事后没有说酒驾，
还说和我商量好的（尽管我录笔录的时候说他并没有经过我同意就走了，），说我不配合，而且现在就不一定是他全责了，这个不是我们说了算的，必须交警来判定，所以最后的结果 还不得而知，真是好心办坏事啊，
这也是我一开始时候最担心的，所以其实做笔录的时候，我说的都是真话，不然真有做伪证的麻烦，这点以后也要切记切记。&lt;/p&gt;

&lt;p&gt;现在事情已经这样，我也就这样吧，本来想快点解决的，现在才知道这不是急的事情，现在我同意和他私了，他说交警同意他也可以私了，如果不成的话，我就去物价局开物价单，按规矩来，至于他的问题怎么解决，和我无关，
以后千万不要想太多去发律面前随便帮助别人，帮助他就像一开始那样，给他机会回来解决问题，但是放弃了。&lt;/p&gt;

&lt;p&gt;现在想想，我一没有肇事逃逸，二没有做伪证，最后的结果可能就是我要为事故本身担责，就算这样，我也认了，吃一亏长一智，最后还是由交警判定，坚持自己的说法，在交警队不是想怎么说就能怎么说的，这点依然要切记切记。&lt;/p&gt;

&lt;p&gt;中午百度了一下，肇事逃逸分为尚不构成犯罪的，和构成犯罪的，离开现场就是逃逸，损失较小的尚不构成犯罪，但是一般是需要承担全责，并处以处罚的，这个事情现在依旧可以私了，是允许的，如果不私了，那就走法律。
所以目前对我来说是没有什么问题的，等待结果吧！！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>My Future Direction</title>
      <link>http://kingjcy.github.io/post/myfuturedirection/</link>
      <pubDate>Fri, 06 May 2016 17:24:35 +0800</pubDate>
      
      <guid>http://kingjcy.github.io/post/myfuturedirection/</guid>
      <description>&lt;p&gt;今天写下这个也许有点早了，就像我之前想的Linux c/c++ 服务端就是并发编程的一样，并不是你看到那样，只是你还没有深入，没有达到要求，但是也写下来吧！对我以后的发展方向与结果也有一个印证。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;大数据和云计算&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;云是网络、互联网的一种比喻说法。这句话是在知乎上看到的，我觉得比较贴切，比较好理解。&lt;/p&gt;

&lt;p&gt;云计算也即是互联网计算模式，目前数据已成为技术的中心，围绕着数据，总的来说大数据有5个部分。数据采集，数据存储，数据清洗，数据挖掘，数据可视化。
数据采集有硬件采集，如OBD，有软件采集，如滴滴，淘宝。数据存储就包括NOSQL，hadoop等等。数据清洗包括语议分析，流媒体格式化等等。数据挖掘包括关联分析，相似度分析，距离分析，聚类分析等等。数据可视化就是WEB的了。&lt;/p&gt;

&lt;p&gt;这个充分体现了以数据为中心的计算和存储的模式，已然是一个趋势。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;我目前的想法与规划&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;之前一直致力于Linux c/c++服务端方向出发，希望搞服务器，而服务无外乎大规模的访问并发，强大的数据处理能力，以及快速的响应时间。
所以一直在研究并发和处理逻辑，随着服务器通信的面纱被一步步解开，越来越发现，现在的服务端已然很强大，支持其现在的规模完全没有问题。
而且在前人的努力下，大量的库完美的支撑着各方面的功能，已然无用武之地。一个公司不可能没事让你自己搞一套不成熟的服务器，那样用别人现成的，也就只剩下维护了。
这是相当不爽的事情，不是说好的在前人的基础上可以看的更远吗？做的更多吗？忘记了公司存在的根本是赚钱。&lt;/p&gt;

&lt;p&gt;这也是没有办法的事情，但是后端的强大远远不是我想的那样，服务器就只是哪些吗？不是，所以我看到了大数据和云计算技术，是啊，现在是互联网时间，数据才是中心，每天都有海量的数据产生。
它的价值就不是能说出来的了，可以体会，所以开始研究大数据和云计算，今天是玩hadoop的第二个星期，我又纠结了，成功的搭起框架，玩起分布式存储和mr分布式计算框架。我又发现，这个生态系统已经很强大，看样子我又要进入到ops的角色了。
前几天听一个朋友说，现在的大数据和云计算技术，大部分只是极限于，部署集群，解决问题。我擦，这不是ops的任务吗？
而且感觉这样肯定用不到我学习服务器端的知识，那不是重头开始，完全转了方向。所以我就研究一下别人是怎么想的。&lt;/p&gt;

&lt;p&gt;终于还是有了自己的想法，和更加明确的方向：
以前学的服务端的网络通信编程，进程，线程等等相关的知识都是基础。那是完全没有错的，没有这些就入不了门，现在是相当于入门了，在想想，hadoop公司是只要用就好，而你就必须当运维吗？你就不可以研究hadoop底层的东西，你想想节点和节点之间不是用的你那些并发通信还能是什么？
所以方向还是对的，就看你怎么做了，所以朋友说的对，你想的太多了，看到的太少了，所以现在就研究hadoop的底层实现，这些都是一个经典的架构，对于以后的发展都是有很大作用的，你想想，你可以动手部署集群，解决问题，还了解底层架构。你会没有工作。&lt;/p&gt;

&lt;p&gt;哈哈，所以以后好好学习，目前，基础已经打下，还不是太牢，但是都是知道的，这样已经入门，所以我现在可以研究hadoop以及底层开源架构，还有其他很多的开源热点项目，总算跟上了一点时代的步伐。&lt;/p&gt;

&lt;p&gt;目标是：&lt;code&gt;研究开源，实战生产，团队开发，可以去nb的工作，拿高工资。&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;摘抄知乎：&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;不去盲目的追求任何一种技术，而是通过自己的实践观察，在实际的体验和业务中将技术融会贯通，旧的是基石，新的是提炼，hadoop也不过是Google论文下的一只小虾米，仅此而已，认清楚自己和技术的关系才最为重要，技术永远是你用来提升对这个社会理解的小工具，情商永远比智商重要。&lt;/p&gt;

&lt;p&gt;Hadoop说到底只是一项分布式系统的工具，学习的本质是：理解分布式系统设计中的原则以及方法，例如负载均衡，故障恢复，并发程序设计，并发数据结构，等等。理解这些设计原理，并走入底层读懂每一行Hadoop的源码更加的重要。最近在改Hadoop的源码，坦白说Hadoop作为一个复杂的开源项目有着太多的局限，许多实现对于效率和并发缺乏考虑。&lt;/p&gt;

&lt;p&gt;持续更新中。。。。。。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;2016.08.11&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;最近一直在苦恼linux下java客户端的接入使用，这样就涉及到语言之分，需要使用java的一套东西，慢慢了解java的机制，发现了java的可以快速之道，都是部署现成的jar包，都自动加载机制，所以很便捷也是有道理的，这让我想起了最近的go很火，也是使用包的管理机制，可以各种包管理，这样可以让我们这些偏好c/c++的人重最底层的生产力中解放出来，可以更快速的开发，所以一样的道路，但是对我来说，以后的发展方向怎么说，其实都是一样的，我需要搞后端，服务端，是开发并不是运维，需要搞分布式，大数据，云计算，这样不可能只是一门语言完成的，现在只是知道自己要做什么，然后需要用到什么都要学习，我想我是走在一条去架构师的路上。。。。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>觉得很有想法，也许对以后的道路会有影响。</title>
      <link>http://kingjcy.github.io/post/technology-manage/</link>
      <pubDate>Fri, 29 Apr 2016 16:25:18 +0800</pubDate>
      
      <guid>http://kingjcy.github.io/post/technology-manage/</guid>
      <description>&lt;p&gt;觉得很有想法，也许对以后的道路会有影响。虽然在国内也许不适用，但是总是有个梦。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;很高兴看到阿里云的成立。这意味着阿里已经把对互联网技术的投入提高到了的战略高度。过去经常听工程师抱怨阿里不是一家技术公司。现在再没有理由可以这样抱怨了。但是要实现这个战略，没有技术储备是不行的。招聘和培养工程师显然是目前集团各子公司同时面临的一个令人头痛的难题。由于曾经在硅谷工作过，我常想，为什么硅谷有这么多40岁以上的工程师，而国内30岁以上的就已经寥寥无几了？为什么硅谷的工程师的技术寿命可以这么长？为什么他们可以不浮躁，不急功近利呢？阿里要走102年，阿里的工程师可以一起走多远呢？在国内，有2-3年工作经历的工程师就可以算有经验的了。工作了5年以上的工程师往往会考虑向管理岗位转型，或者向业务转型。中国目前处于高度发展的阶段。很多企业缺乏管理人才，工作5年就被提吧为干部很正常。但留下的后遗症是30岁以上的优秀技术人才极度缺乏。在硅谷，5年以下工作经验的人都算是初级的。一般高级工程师需要5年以上的工作经验，架构师一般需要10年以上的工作经验。这还不算上大部分硅谷的工程师都有计算机硕士学位。毕业的时候一般已经是24，25岁了。再工作10年，35岁才升为架构师是非常正常的。然而，公司里的架构师有限。其实大部分40岁的工程师仍然在一线工作，比如写程序，做测试，进行项目管理等。美国硅谷是计算机人才集中的地方，也是创业公司群集的地方。在硅谷，从只有几个人到几十个人的创业公司比比皆是。他们的共同梦想就是经过几年的奋斗，通过技术的创新，再次缔造像英特尔, 苹果，思科，甲骨文，雅虎，Google，Facebook等这样的神话。即使创造不了神话，也可以通过IPO或者被收购的途径创造财富。在这样的环境中，公司对管理人才的需求同样是非常大的，但为什么仍然有大量的工程师“无动于衷”，仍然从事着技术活儿呢？我认为有两个主要原因。一个是外因。在美国，管理岗位的待遇和技术岗位待遇相差不大。特别在崇尚技术的硅谷，经理的地位并不比工程师高，甚至更低。比如架构师在公司里的重要性往往要超过经理。因此管理岗位的“诱惑”并不大。在这样一种技术氛围中，走技术路线很正常。但是即使在这样一个技术环境中，硅谷对管理人才依然需要。当工程师表现出色时，也有很多机会转成管理岗位。然而相当一部分工程师会主动放弃这样的机会，而继续干他们的技术活儿。这就是内因在驱动了。技术工作和管理工作的本质区别是，前者面对的是系统（软件，硬件等），而后者面对的是人。系统问题再难，只要有足够的时间和资源，一般都可以解决。越难的问题，解决之后越有成就感。而人的问题，有时候看似很简单，却解决不了。是人，总要有头疼脑热，生病的时候。是人，免不了产生情绪，从而影响工作。有人的地方，就会有矛盾，就会有摩擦。简单地讲，系统会按照事先设定的逻辑运行，是死的，因此往往可控，可规划。而人是活的，不是输入几条命令就可以控制的，而是需要沟通，需要感情的。因此，大部分硅谷的工程师很“聪明”。他们主动选择“简单”地工作。白天好好地工作，晚上好好地生活。何必去“自寻烦恼”，转做管理呢。其实不光是硅谷的，其它地区的工程师都有一个共同的性格特点，追求简单，追求完美，思维方式上比较理性和逻辑性，看问题比较趋向于非黑即白。这样的性格非常适合做技术工作，可是我们中国的工程师有时候偏偏看不到自己的这个特点。不想当元帅的士兵不是好士兵。工程师希望向管理方向发展是非常正常的。但问题是为什么和怎样？我碰到过不只一个工程师告诉我，希望转做管理的原因是担心今后年级大了，技术能力跟不上了。我觉得非常可笑。这就好比是一个士兵说：我杀敌本领不行，不适合上战场，那就让我做军官吧。一个没做过士兵的元帅肯定不是好元帅。其实做技术和当兵毕竟不同，不是靠体力吃饭的。年级大点往往是优势。我觉得走技术路线对工程师性格的人是一条捷径。如果能静下心来仔细钻研技术，一定能在某个方面做得比别人好。这里的关键是好奇心和耐心。在今天这样的信息时代，找到答案并不是一件难事。难就难在有没有好奇心和耐心去找。比如，Java程序员天天都用到String这个类型。但有没有想过为什么Java语言里有String和StringBuffer两种字符串类型，而不是一种？有没有去看过String和StringBuffer的源代码？再例如，天天做网站和HTTP打交道，有没有看过HTTP协议？有没有尝试过不用浏览器，wget等工具，而用最原始的telnet方式来访问网站？看看这HTTP的头里到底是什么东东？在我面试过的工程师中，做过这几件事的人不到5%。一旦了解得比别人深，就容易看到问题本质，产生信心，激发乐趣。这时候你的解决方案就比别人漂亮，逐渐建立起了影响力，成为了“专家”。因此公司里的疑难杂症会主动找上门来。你就比别人得到了更多的解决问题的机会，从而更快地提升能力。一旦进入良性循环，你的进步就比别人快，但付出的却不一定比别人多。这时候你已经走上了捷径。在技术人才极度缺乏的中国，在众人盲目追求管理岗位的那点虚荣的今天，如果你的性格是工程师类型的，走技术路线其实是非常适合的。如果你才毕业，那你是最幸福的。你可以给自己制定3个甚至4个五年计划。例如5年打基础，10年变专家，15年国内知名，20年世界闻名。如果你已经奔三或者三十出头，那你快成熟了，但离开花结果还早呢。不信你看看下面几位我们都熟悉的人。拉里-沃尔（Larry Wall）33岁时出版了《Perl语言编程》一书。之前他是一个系统管理员。互联网之父温特-瑟夫（Vint Cerf）在发明TCP/IP时，已经35岁。万维网之父蒂姆·伯纳斯—李（Tim Berners-Lee）在37岁时才发明了万维网（WWW）。丹尼斯-里奇（Dennis Ritchie）的《C程序设计语言》一书出版时，他37岁。Java之父詹姆斯·戈士林（James Gosling）40岁时才因为发明Java而成名。苹果公司创始人之一史蒂夫•沃兹尼艾克（Steven Wozniak）在今年年初以首席科学家的身份加入一家创业公司，研发基于高速闪存技术的存储。他如今已经59岁了。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.cnblogs.com/Anker/archive/2013/01/04/2844834.html&#34;&gt;http://www.cnblogs.com/Anker/archive/2013/01/04/2844834.html&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>